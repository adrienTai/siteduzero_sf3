<?php
namespace OC\PlatformBundle\Controller;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use OC\PlatformBundle\Entity\Advert;
use OC\PlatformBundle\Entity\AdvertSkill;
use OC\PlatformBundle\Entity\Image;
use OC\PlatformBundle\Entity\Application;
use OC\PlatformBundle\Entity\Category;

class AdvertController extends Controller
{
	private $listAdverts;
	
	public function __construct(){
		$this->listAdverts =  array(
		  array(
		    'title'   => 'Recherche développpeur Symfony',
		    'id'      => 1,
		    'author'  => 'Alexandre',
		    'content' => 'Nous recherchons un développeur Symfony débutant sur Lyon. Blabla…',
		    'date'    => new \Datetime()),
		  array(
		    'title'   => 'Mission de webmaster',
		    'id'      => 2,
		    'author'  => 'Hugo',
		    'content' => 'Nous recherchons un webmaster capable de maintenir notre site internet. Blabla…',
		    'date'    => new \Datetime()),
		  array(
		    'title'   => 'Offre de stage webdesigner',
		    'id'      => 3,
		    'author'  => 'Mathieu',
		    'content' => 'Nous proposons un poste pour webdesigner. Blabla…',
		    'date'    => new \Datetime())
		);
	}
	
	public function indexAction($page){
		if($page <1){
			throw new NotFoundHttpException('Page "'.$page.'" inexistante.');
		}
		
		
		$content = $this->get('templating')->render('OCPlatformBundle:Advert:index.html.twig',
		 	[
		 	'nom'=>'GreenBatou',
		 	'listAdverts'=> $this->listAdverts
		 	]);
		
		return new Response($content);
	}

	public function viewAction($id, Request $request){
		$tag = $request->query->get('tag');
/*
		$session  =$request->getSession();
		$userID = $session->get('user_id');
		$session->set('user_id',91);

		$response = new Response();
		$response->setContent("Ceci est une page d'erreur 404");
		$response->setStatusCode(Response::HTTP_NOT_FOUND);
		$response->headers->set('Content-Type','application/json'); //ou new JsonResponse
		return $response;
    
		return $this->get('templating')->renderResponse(
			'OCPlatformBundle:Advert:view.html.twig',
				array('id'  => $id, 'tag' => $tag)
		);

		//objet response du service templating	
		foreach($this->listAdverts as $advert){
			if($advert['id'] == $id){
				$myAdvert = $advert;
			}
		}
*/
		//$repository = $this->get('doctrine')->getManager()->getRepository('OCPlatformBundle:Advert');
		$em = $this->getDoctrine()->getManager();

		$advert = $em->getRepository('OCPlatformBundle:Advert')->find($id);
		if(null === $advert) {
			throw new NotFoundHttpException("L'annonce d'id ".$id." n'existe pas.");
		}
		
		$listApplications = $em->getRepository('OCPlatformBundle:Application')
								->findBy(array('advert' => $advert));
		
		$listAdvertSkills = $em->getRepository('OCPlatformBundle:AdvertSkill')
								->findBy(array('advert' => $advert));
		
		
		return $this->render('OCPlatformBundle:Advert:view.html.twig', array(
		  'advert' => $advert,
		  'listApplications' => $listApplications,
		  'listAdvertSkills' => $listAdvertSkills
		));
		
	}

	public function addAction(Request $request){

			$antispam = $this->container->get('oc_platform.antispam');
			$text="Nous recherchons un développeur Symfony débutant sur Lyon. Blabla…";
			if($antispam->isSpam($text)){
				throw new \Exception('Votre message a été détecté comme spam !');
			}
			
			$em= $this->getDoctrine()->getManager();
			
			$advert = new Advert();
			$advert->setTitle("Recherche développeur Symfony.");
			$advert->setAuthor("Alexandre");
			$advert->setContent($text);

			$image = new Image();
			$image->setUrl('http://sdz-upload.s3.amazonaws.com/prod/upload/job-de-reve.jpg');
			$image->setAlt('Job de rêve');
			
			$application1 = new Application();
			$application1->setAuthor('Marine');
			$application1->setContent("J'ai toutes les qualités requises.");
			
			
			$application2 = new Application();
			$application2->setAuthor('Pierre');
			$application2->setContent("Je suis très motivé.");
			
						
			$advert->setImage($image);
			$application1->setAdvert($advert);
			$application2->setAdvert($advert);
			
			$listSkills = $em->getRepository('OCPlatformBundle:Skill')->findAll();
			foreach ($listSkills as $skill){
				$advertSkill = new AdvertSkill();
				$advertSkill->setAdvert($advert);
				$advertSkill->setSkill($skill);
				$advertSkill->setLevel('Expert');
				
				$em->persist($advertSkill);
			}
			
			$em->persist($advert);
			$em->persist($application1);
			$em->persist($application2);
			$em->flush();
			
		if($request->isMethod('POST')){			
			$request->getSession()->getFlashBag()->add('notice', 'Annonce bien enregistrée');	
			return $this->redirectToRoute('oc_platform_view', ['id'=> $advert->getId() ]);		
		}
		return $this->render('OCPlatformBundle:Advert:add.html.twig');
	}

	public function editAction($id, Request $request){
		if($request->isMethod('POST')){
			$request->getSession()->getFlashBag()->add('notice', 'Annonce bien modifiée');			
			return $this->redirectToRoute('oc_platform_view', ['id'=>5]);
		}
		
		$em = $this->getDoctrine()->getManager();
		$advert = $em->getRepository('OCPlatformBundle:Advert')->find($id);
		
		if( null == $advert){
			throw new NotFoundHttpException("L'annonce d'id ".$id." n'existe pas.");
		}
		/*
		$listCategories = $em->getRepository('OCPlatformBundle:Category')->findAll();
		
		foreach($listCategories as $category){

			$advert->addCategory($category);
		}
		*/
		var_dump($advert);
		
		$em->flush();

		return $this->render('OCPlatformBundle:Advert:edit.html.twig', array(
		  'advert' => $advert
		));
	}
	
	public function deleteAction($id){
		$em = $this->getDoctrine()->getManager();
		$advert = $em->getRepository('OCPlatformBundle:Advert')->find($id);
		
		if(null == $advert){
			throw new NotFoundHttpException("L'annonce d'id ".$id." n'existe pas.");
		}
		
		foreach($advert->getCategories() as $category){
			$advert->removeCategory($category);
		}
		$em->flush();

		return $this->render('OCPlatformBundle:Advert:delete.html.twig');
	}
	
	public function menuAction($limit)
	{
		// On fixe en dur une liste ici, bien entendu par la suite
		// on la récupérera depuis la BDD !
		$this->listAdverts = array(

		  array('id' => 1, 'title' => 'Recherche développeur Symfony'),
		  array('id' => 2, 'title' => 'Mission de webmaster'),
		  array('id' => 3, 'title' => 'Offre de stage webdesigner')
		);

		return $this->render('OCPlatformBundle:Advert:menu.html.twig', array(
		  // Tout l'intérêt est ici : le contrôleur passe
		  // les variables nécessaires au template !

		  'listAdverts' => $this->listAdverts
		));
	}
	
}

